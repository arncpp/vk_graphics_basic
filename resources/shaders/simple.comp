#version 430

layout( local_size_x = 256 ) in;

layout( push_constant ) uniform params {
  uint len;
} PushConstant;

layout(std430, binding = 0) buffer a 
{
    float A[];
};

layout(std430, binding = 1) buffer b
{
    float B[];
};

layout(std430, binding = 2) buffer Sum
{
    float sum[];
};

void main() 
{
    int idx = int(gl_GlobalInvocationID.x);
    if (idx < int(PushConstant.len))
    {
    float s = 0.0;
    int start = clamp(idx - 3, 0, int(PushConstant.len) - 1);
    int end = clamp(idx + 3, 0, int(PushConstant.len) - 1);

    for (int i = start; i <= end; ++i)
    {
        s += A[i];
    }

    int range_size = end - start + 1;
    sum[idx] = s / float(range_size);
    }
}